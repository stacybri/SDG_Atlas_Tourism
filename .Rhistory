"Nov",
"Dec"
)
))
#Create a date variable by combining year and month
singapore_df$date <- as.Date(paste(singapore_df$year, as.numeric(singapore_df$month), "01", sep = "-"))
# Ensure the date is in the correct format (year-month-day)
singapore_df$date <- format(singapore_df$date, format = "%Y-%m-%d")
singapore_df <- singapore_df %>%
arrange(date) %>%
mutate(date=as.Date(date))
# Create a highcharter time series plot
highchart(type = "stock") %>%
hc_title(text = "Hotel Room Revenue (Thousand Dollars) - Singapore") %>%
hc_xAxis(type = "datetime", title = list(text = "Date"),
dateTimeLabelFormats = list(
year = list(main = "%Y")
)) %>%
hc_yAxis(title = list(text = "Revenue")) %>%
hc_add_series(data = singapore_df, hcaes(x = date, y = revenue), name = "Revenue", type = "line")
# ggplot(tour_avg_df, aes(x=tourism, y=change_gdp)) +
#   geom_col(fill='#ef233c') +
#   ylab('Change in GDP 2019-2021') +
#   xlab('Tourism as share of GDP') +
#   expand_limits(y=c(-10,2)) +
#   labs(title=str_wrap('Economies dependent on tourism saw large drops in GDP from 2019-21',60),
#        caption='Data on tourism expenditure from UNWTO.  Data on GDP from World Bank.') +
#   theme_bw(  )
#
#plot the data
# Assuming you have the necessary data in the 'tour_rel_df' dataframe
# Assuming you have the necessary data in the 'tour_rel_df' dataframe
tour_rel_df <- tour_rel_df %>%
mutate(across(c('tourism_gdp_share_2019', 'change_gdp'), round, 2)) %>%
arrange(tourism_gdp_share_2019)
# Calculate linear regression coefficients
gdp_model <- loess(change_gdp ~ tourism_gdp_share_2019, data = tour_rel_df, degree=1)
# Calculate regression line points
x_values <- tour_rel_df$tourism_gdp_share_2019
y_values <- predict(gdp_model)
regression_data <- data.frame(tourism_gdp_share_2019 = x_values, change_gdp = y_values)
# Create a series for the regression line
regression_series <- list(
type = "line",
name = "Regression Line",
data = regression_data,
#marker = list(enabled = FALSE),
color = "red",  # Set line color
lineWidth = 2    # Set line width
)
legend_options <- list(
enabled = TRUE,                   # Enable the legend
align = "center",                 # Set the legend's horizontal alignment
layout = "vertical",              # Set the legend's layout (vertical or horizontal)
verticalAlign = "top",            # Set the legend's vertical alignment
itemStyle = list(fontWeight = "bold")  # Customize the legend item's style
)
# Create a Highcharter plot
hchart(
tour_rel_df,
type='scatter',
hcaes(
x = tourism_gdp_share_2019,
y = change_gdp,
color=tourism,
name=country,
tooltip=list(
pointFormat = "<b>{point.name}</b><br> Tourism as share of GDP: {point.x}<br> Percentage Change in GDP 2019-21: {point.y}%"
)
)
) %>%
hc_tooltip(
split = TRUE,
pointFormat = "<b>{point.name}</b><br> Tourism as share of GDP: {point.x}<br> Percentage Change in GDP 2019-21: {point.y}%"
)  %>%
hc_add_series(
regression_data,
type = "line",
hcaes(
x = tourism_gdp_share_2019,
y = change_gdp),
color='red',
enableMouseTracking=FALSE
) %>%
hc_xAxis(
title = list(text = "Tourism as share of GDP"),
gridLineWidth = 1,
type='logarithmic'
) %>%
hc_yAxis(
title = list(text = "Percentage Change in GDP 2019-21"),
gridLineWidth = 1
) %>%
hc_title(
text = "Economies dependent on tourism saw large drops in GDP from 2019-21",
align = "center",
margin = 20
) %>%
hc_subtitle(
text = "Data on tourism expenditure from UNWTO. Data on GDP from World Bank.",
align = "center",
margin = 10
) %>%
hc_caption(
text="Fitted line produced using local 1st degree polynomial regression fitting."
) %>%
hc_legend(legend_options)
macao_gdp <- gdp_forcast_df %>%
filter(iso3c=='MAC') %>%
mutate(across(c('gdp','gdp_forc20'), round,2))
# Create a Highcharter plot
highchart() %>%
hc_xAxis(categories = macao_gdp$date) %>%
hc_add_series(macao_gdp, "line", hcaes(x = date, y = gdp), name="Current GDP Projections",color='#8ecae6') %>%
hc_add_series(macao_gdp, "line", hcaes(x = date, y = gdp_forc20), name='January 2020 Projections', dashStyle='Dot', color='#023047') %>%
hc_chart(
type = "area",        # Use an area chart type
plotBackgroundColor = NULL  # Set plot background color to transparent
) %>%
hc_legend(enabled = TRUE) %>%
hc_yAxis(title = list(text = "GDP (billions)")) %>%
hc_title(text = "Macao GDP vs. GDP Forecast 2020")
aruba_gdp <- gdp_forcast_df %>%
filter(iso3c=='ABW') %>%
mutate(across(c('gdp','gdp_forc20'), round,2))
# Create a Highcharter plot
highchart() %>%
hc_xAxis(categories = aruba_gdp$date) %>%
hc_add_series(aruba_gdp, "line", hcaes(x = date, y = gdp), name="Current GDP Projections",color='#8ecae6') %>%
hc_add_series(aruba_gdp, "line", hcaes(x = date, y = gdp_forc20), name='January 2020 Projections', dashStyle='Dot', color='#023047') %>%
hc_chart(
type = "area",        # Use an area chart type
plotBackgroundColor = NULL  # Set plot background color to transparent
) %>%
hc_legend(enabled = TRUE) %>%
hc_yAxis(title = list(text = "GDP (billions)")) %>%
hc_title(text = "Aruba GDP vs. GDP Forecast 2020")
View(tour_rel_df)
View(tourism_df)
View(tour_rel_df)
climate_df <- tour_rel_df %>%
left_join(wb_data(
indicator='AG.LND.EL5M.ZS',
start_date=2015,
end_date=2015
))
View(climate_df)
# ggplot(tour_avg_df, aes(x=tourism, y=change_gdp)) +
#   geom_col(fill='#ef233c') +
#   ylab('Change in GDP 2019-2021') +
#   xlab('Tourism as share of GDP') +
#   expand_limits(y=c(-10,2)) +
#   labs(title=str_wrap('Economies dependent on tourism saw large drops in GDP from 2019-21',60),
#        caption='Data on tourism expenditure from UNWTO.  Data on GDP from World Bank.') +
#   theme_bw(  )
#
#plot the data
# Assuming you have the necessary data in the 'tour_rel_df' dataframe
# Assuming you have the necessary data in the 'tour_rel_df' dataframe
elevation_df <- tour_rel_df %>%
left_join(wb_data(
indicator='AG.LND.EL5M.ZS',
start_date=2015,
end_date=2015
)) %>%
mutate(AG.LND.EL5M.ZS=round(AG.LND.EL5M.ZS,2))
# Calculate linear regression coefficients
elevation_model <- loess(AG.LND.EL5M.ZS ~ tourism_gdp_share_2019, data = elevation_df, degree=1)
# Calculate regression line points
x_values <- elevation_df$tourism_gdp_share_2019
y_values <- predict(elevation_model)
regression_data <- data.frame(tourism_gdp_share_2019 = x_values, change_gdp = y_values)
# Create a series for the regression line
regression_series <- list(
type = "line",
name = "Regression Line",
data = regression_data,
#marker = list(enabled = FALSE),
color = "red",  # Set line color
lineWidth = 2    # Set line width
)
legend_options <- list(
enabled = TRUE,                   # Enable the legend
align = "center",                 # Set the legend's horizontal alignment
layout = "vertical",              # Set the legend's layout (vertical or horizontal)
verticalAlign = "top",            # Set the legend's vertical alignment
itemStyle = list(fontWeight = "bold")  # Customize the legend item's style
)
# Create a Highcharter plot
hchart(
elevation_df,
type='scatter',
hcaes(
x = tourism_gdp_share_2019,
y = AG.LND.EL5M.ZS,
color=tourism,
name=country,
tooltip=list(
pointFormat = "<b>{point.name}</b><br> Tourism as share of GDP: {point.x}<br> Percentage Land Area Under 5m: {point.y}%"
)
)
) %>%
hc_tooltip(
split = TRUE,
pointFormat = "<b>{point.name}</b><br> Tourism as share of GDP: {point.x}<br> Percentage Land Area Under 5m: {point.y}%"
)  %>%
hc_add_series(
regression_data,
type = "line",
hcaes(
x = tourism_gdp_share_2019,
y = change_gdp),
color='red',
enableMouseTracking=FALSE
) %>%
hc_xAxis(
title = list(text = "Tourism as share of GDP"),
gridLineWidth = 1,
type='logarithmic'
) %>%
hc_yAxis(
title = list(text = "Percentage Land Area Under 5m"),
gridLineWidth = 1
) %>%
hc_title(
text = "Economies dependent on tourism have large exposure to sea level rise.",
align = "center",
margin = 20
) %>%
hc_subtitle(
text = "Data on tourism expenditure from UNWTO. Data on land area from World Bank.",
align = "center",
margin = 10
) %>%
hc_caption(
text="Fitted line produced using local 1st degree polynomial regression fitting."
) %>%
hc_legend(legend_options)
# ggplot(tour_avg_df, aes(x=tourism, y=change_gdp)) +
#   geom_col(fill='#ef233c') +
#   ylab('Change in GDP 2019-2021') +
#   xlab('Tourism as share of GDP') +
#   expand_limits(y=c(-10,2)) +
#   labs(title=str_wrap('Economies dependent on tourism saw large drops in GDP from 2019-21',60),
#        caption='Data on tourism expenditure from UNWTO.  Data on GDP from World Bank.') +
#   theme_bw(  )
#
#plot the data
# Assuming you have the necessary data in the 'tour_rel_df' dataframe
# Assuming you have the necessary data in the 'tour_rel_df' dataframe
elevation_df <- tour_rel_df %>%
left_join(wb_data(
indicator='AG.LND.EL5M.ZS',
start_date=2015,
end_date=2015
)) %>%
mutate(AG.LND.EL5M.ZS=round(AG.LND.EL5M.ZS,2))
# Calculate linear regression coefficients
elevation_model <- loess(AG.LND.EL5M.ZS ~ tourism_gdp_share_2019, data = elevation_df, degree=1)
# Calculate regression line points
x_values <- elevation_df$tourism_gdp_share_2019
y_values <- predict(elevation_model)
regression_data <- data.frame(tourism_gdp_share_2019 = x_values, change_gdp = y_values)
# Create a series for the regression line
regression_series <- list(
type = "line",
name = "Regression Line",
data = regression_data,
#marker = list(enabled = FALSE),
color = "red",  # Set line color
lineWidth = 2    # Set line width
)
legend_options <- list(
enabled = TRUE,                   # Enable the legend
align = "center",                 # Set the legend's horizontal alignment
layout = "vertical",              # Set the legend's layout (vertical or horizontal)
verticalAlign = "top",            # Set the legend's vertical alignment
itemStyle = list(fontWeight = "bold")  # Customize the legend item's style
)
# Create a Highcharter plot
hchart(
elevation_df,
type='scatter',
hcaes(
x = tourism_gdp_share_2019,
y = AG.LND.EL5M.ZS,
color=tourism,
name=country,
tooltip=list(
pointFormat = "<b>{point.name}</b><br> Tourism as share of GDP: {point.x}<br> Percentage Land Area Under 5m: {point.y}%"
)
)
) %>%
hc_tooltip(
split = TRUE,
pointFormat = "<b>{point.name}</b><br> Tourism as share of GDP: {point.x}<br> Percentage Land Area Under 5m: {point.y}%"
)  %>%
hc_add_series(
regression_data,
type = "line",
hcaes(
x = tourism_gdp_share_2019,
y = change_gdp),
color='red',
enableMouseTracking=FALSE
) %>%
hc_xAxis(
title = list(text = "Tourism as share of GDP"),
gridLineWidth = 1,
type='logarithmic'
) %>%
hc_yAxis(
title = list(text = "Percentage Land Area Under 5m"),
gridLineWidth = 1,
type='logarithmic'
) %>%
hc_title(
text = "Economies dependent on tourism have large exposure to sea level rise.",
align = "center",
margin = 20
) %>%
hc_subtitle(
text = "Data on tourism expenditure from UNWTO. Data on land area from World Bank.",
align = "center",
margin = 10
) %>%
hc_caption(
text="Fitted line produced using local 1st degree polynomial regression fitting."
) %>%
hc_legend(legend_options)
# ggplot(tour_avg_df, aes(x=tourism, y=change_gdp)) +
#   geom_col(fill='#ef233c') +
#   ylab('Change in GDP 2019-2021') +
#   xlab('Tourism as share of GDP') +
#   expand_limits(y=c(-10,2)) +
#   labs(title=str_wrap('Economies dependent on tourism saw large drops in GDP from 2019-21',60),
#        caption='Data on tourism expenditure from UNWTO.  Data on GDP from World Bank.') +
#   theme_bw(  )
#
#plot the data
# Assuming you have the necessary data in the 'tour_rel_df' dataframe
# Assuming you have the necessary data in the 'tour_rel_df' dataframe
elevation_df <- tour_rel_df %>%
left_join(wb_data(
indicator='AG.LND.EL5M.ZS',
start_date=2015,
end_date=2015
)) %>%
mutate(AG.LND.EL5M.ZS=round(AG.LND.EL5M.ZS,2))
# Calculate linear regression coefficients
elevation_model <- loess(AG.LND.EL5M.ZS ~ tourism_gdp_share_2019, data = elevation_df, degree=1)
# Calculate regression line points
x_values <- elevation_df$tourism_gdp_share_2019
y_values <- predict(elevation_model)
regression_data <- data.frame(tourism_gdp_share_2019 = x_values, change_gdp = y_values)
# Create a series for the regression line
regression_series <- list(
type = "line",
name = "Regression Line",
data = regression_data,
#marker = list(enabled = FALSE),
color = "red",  # Set line color
lineWidth = 2    # Set line width
)
legend_options <- list(
enabled = TRUE,                   # Enable the legend
align = "center",                 # Set the legend's horizontal alignment
layout = "vertical",              # Set the legend's layout (vertical or horizontal)
verticalAlign = "top",            # Set the legend's vertical alignment
itemStyle = list(fontWeight = "bold")  # Customize the legend item's style
)
# Create a Highcharter plot
hchart(
elevation_df,
type='scatter',
hcaes(
x = tourism_gdp_share_2019,
y = AG.LND.EL5M.ZS,
color=tourism,
name=country,
tooltip=list(
pointFormat = "<b>{point.name}</b><br> Tourism as share of GDP: {point.x}<br> Percentage Land Area Under 5m: {point.y}%"
)
)
) %>%
hc_tooltip(
split = TRUE,
pointFormat = "<b>{point.name}</b><br> Tourism as share of GDP: {point.x}<br> Percentage Land Area Under 5m: {point.y}%"
)  %>%
hc_add_series(
regression_data,
type = "line",
hcaes(
x = tourism_gdp_share_2019,
y = change_gdp),
color='red',
enableMouseTracking=FALSE
) %>%
hc_xAxis(
title = list(text = "Tourism as share of GDP"),
gridLineWidth = 1,
type='logarithmic'
) %>%
hc_yAxis(
title = list(text = "Percentage Land Area Under 5m"),
gridLineWidth = 1
) %>%
hc_title(
text = "Economies dependent on tourism have large exposure to sea level rise.",
align = "center",
margin = 20
) %>%
hc_subtitle(
text = "Data on tourism expenditure from UNWTO. Data on land area from World Bank.",
align = "center",
margin = 10
) %>%
hc_caption(
text="Fitted line produced using local 1st degree polynomial regression fitting."
) %>%
hc_legend(legend_options)
# ggplot(tour_avg_df, aes(x=tourism, y=change_gdp)) +
#   geom_col(fill='#ef233c') +
#   ylab('Change in GDP 2019-2021') +
#   xlab('Tourism as share of GDP') +
#   expand_limits(y=c(-10,2)) +
#   labs(title=str_wrap('Economies dependent on tourism saw large drops in GDP from 2019-21',60),
#        caption='Data on tourism expenditure from UNWTO.  Data on GDP from World Bank.') +
#   theme_bw(  )
#
#plot the data
# Assuming you have the necessary data in the 'tour_rel_df' dataframe
# Assuming you have the necessary data in the 'tour_rel_df' dataframe
elevation_df <- tour_rel_df %>%
left_join(wb_data(
indicator='AG.LND.EL5M.ZS',
start_date=2015,
end_date=2015
)) %>%
mutate(AG.LND.EL5M.ZS=round(AG.LND.EL5M.ZS,2))
# Calculate linear regression coefficients
elevation_model <- loess(AG.LND.EL5M.ZS ~ tourism_gdp_share_2019, data = elevation_df, degree=2)
# Calculate regression line points
x_values <- elevation_df$tourism_gdp_share_2019
y_values <- predict(elevation_model)
regression_data <- data.frame(tourism_gdp_share_2019 = x_values, change_gdp = y_values)
# Create a series for the regression line
regression_series <- list(
type = "line",
name = "Regression Line",
data = regression_data,
#marker = list(enabled = FALSE),
color = "red",  # Set line color
lineWidth = 2    # Set line width
)
legend_options <- list(
enabled = TRUE,                   # Enable the legend
align = "center",                 # Set the legend's horizontal alignment
layout = "vertical",              # Set the legend's layout (vertical or horizontal)
verticalAlign = "top",            # Set the legend's vertical alignment
itemStyle = list(fontWeight = "bold")  # Customize the legend item's style
)
# Create a Highcharter plot
hchart(
elevation_df,
type='scatter',
hcaes(
x = tourism_gdp_share_2019,
y = AG.LND.EL5M.ZS,
color=tourism,
name=country,
tooltip=list(
pointFormat = "<b>{point.name}</b><br> Tourism as share of GDP: {point.x}<br> Percentage Land Area Under 5m: {point.y}%"
)
)
) %>%
hc_tooltip(
split = TRUE,
pointFormat = "<b>{point.name}</b><br> Tourism as share of GDP: {point.x}<br> Percentage Land Area Under 5m: {point.y}%"
)  %>%
hc_add_series(
regression_data,
type = "line",
hcaes(
x = tourism_gdp_share_2019,
y = change_gdp),
color='red',
enableMouseTracking=FALSE
) %>%
hc_xAxis(
title = list(text = "Tourism as share of GDP"),
gridLineWidth = 1,
type='logarithmic'
) %>%
hc_yAxis(
title = list(text = "Percentage Land Area Under 5m"),
gridLineWidth = 1
) %>%
hc_title(
text = "Economies dependent on tourism have large exposure to sea level rise.",
align = "center",
margin = 20
) %>%
hc_subtitle(
text = "Data on tourism expenditure from UNWTO. Data on land area from World Bank.",
align = "center",
margin = 10
) %>%
hc_caption(
text="Fitted line produced using local 1st degree polynomial regression fitting."
) %>%
hc_legend(legend_options)
